{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Downloads\\\\Rahulmovies-main\\\\Rahulmovies-main\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Grid, CircularProgress } from \"@mui/material\";\nimport MovieCard from \"../components/MovieCard\";\nimport { MovieContext } from \"../context/MovieContext\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { fetchMovies } from \"../api/confik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  searchQuery\n}) => {\n  _s();\n  // ✅ Accept searchQuery as a prop\n  const {\n    movies,\n    setMovies,\n    totalResults,\n    setTotalResults,\n    loading,\n    setLoading\n  } = useContext(MovieContext);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    const loadMovies = async () => {\n      setLoading(true);\n      const data = await fetchMovies(searchQuery, 1);\n      setMovies(data.Search || []);\n      setTotalResults(data.totalResults || 0);\n      setLoading(false);\n    };\n    loadMovies();\n  }, [searchQuery]); // ✅ Fetch movies when searchQuery changes\n\n  const loadMoreMovies = async () => {\n    const nextPage = page + 1;\n    const data = await fetchMovies(searchQuery, nextPage);\n    setMovies(prev => [...prev, ...(data.Search || [])]);\n    setPage(nextPage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: movies.length,\n      next: loadMoreMovies,\n      hasMore: movies.length < totalResults,\n      loader: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 119\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, movie.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"x8KRP+j9UOwNsXbXgf+rTfsICgE=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Grid","CircularProgress","MovieCard","MovieContext","InfiniteScroll","fetchMovies","jsxDEV","_jsxDEV","HomePage","searchQuery","_s","movies","setMovies","totalResults","setTotalResults","loading","setLoading","page","setPage","loadMovies","data","Search","loadMoreMovies","nextPage","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","loader","container","spacing","map","movie","imdbID","_c","$RefreshReg$"],"sources":["C:/Users/Rahul/Downloads/Rahulmovies-main/Rahulmovies-main/src/pages/HomePage.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { Grid, CircularProgress } from \"@mui/material\";\nimport MovieCard from \"../components/MovieCard\";\nimport { MovieContext } from \"../context/MovieContext\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { fetchMovies } from \"../api/confik\";\n\nconst HomePage = ({ searchQuery }) => { // ✅ Accept searchQuery as a prop\n  const { movies, setMovies, totalResults, setTotalResults, loading, setLoading } = useContext(MovieContext);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const loadMovies = async () => {\n      setLoading(true);\n      const data = await fetchMovies(searchQuery, 1);\n      setMovies(data.Search || []);\n      setTotalResults(data.totalResults || 0);\n      setLoading(false);\n    };\n\n    loadMovies();\n  }, [searchQuery]); // ✅ Fetch movies when searchQuery changes\n\n  const loadMoreMovies = async () => {\n    const nextPage = page + 1;\n    const data = await fetchMovies(searchQuery, nextPage);\n    setMovies((prev) => [...prev, ...(data.Search || [])]);\n    setPage(nextPage);\n  };\n\n  return (\n    <div>\n      {loading && <CircularProgress />}\n      <InfiniteScroll dataLength={movies.length} next={loadMoreMovies} hasMore={movies.length < totalResults} loader={<CircularProgress />}>\n        <Grid container spacing={2}>\n          {movies.map((movie) => <MovieCard key={movie.imdbID} movie={movie} />)}\n        </Grid>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}